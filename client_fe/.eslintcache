[{"G:\\Projects\\BuyS_Monefy\\client_fe\\src\\index.js":"1","G:\\Projects\\BuyS_Monefy\\client_fe\\src\\App.js":"2","G:\\Projects\\BuyS_Monefy\\client_fe\\src\\components\\signup_page\\SignUp.js":"3","G:\\Projects\\BuyS_Monefy\\client_fe\\src\\components\\home\\Home.js":"4","G:\\Projects\\BuyS_Monefy\\client_fe\\src\\components\\header\\Header.js":"5","G:\\Projects\\BuyS_Monefy\\client_fe\\src\\components\\login\\Login.js":"6","G:\\Projects\\BuyS_Monefy\\client_fe\\src\\Constants.js":"7","G:\\Projects\\BuyS_Monefy\\client_fe\\src\\components\\buyer\\Buyer.js":"8","G:\\Projects\\BuyS_Monefy\\client_fe\\src\\components\\purchaseItem\\PurchaseItem.js":"9"},{"size":164,"mtime":1637598625096,"results":"10","hashOfConfig":"11"},{"size":1005,"mtime":1640700892672,"results":"12","hashOfConfig":"11"},{"size":5522,"mtime":1641484867086,"results":"13","hashOfConfig":"11"},{"size":236,"mtime":1640700428897,"results":"14","hashOfConfig":"11"},{"size":736,"mtime":1637856002007,"results":"15","hashOfConfig":"11"},{"size":2635,"mtime":1641470624636,"results":"16","hashOfConfig":"11"},{"size":560,"mtime":1641487318329,"results":"17","hashOfConfig":"11"},{"size":2246,"mtime":1641579909468,"results":"18","hashOfConfig":"11"},{"size":7636,"mtime":1641558285871,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"km6wt1",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"G:\\Projects\\BuyS_Monefy\\client_fe\\src\\index.js",[],["42","43"],"G:\\Projects\\BuyS_Monefy\\client_fe\\src\\App.js",["44","45"],"import React from 'react'\r\nimport './App.css';\r\nimport Home from './components/home/Home';\r\nimport Login from './components/login/Login';\r\nimport SignUp from './components/signup_page/SignUp';\r\nimport Buyer from './components/buyer/Buyer';\r\nimport Header from './components/header/Header';\r\nimport PurchaseItem from './components/purchaseItem/PurchaseItem';\r\nimport { BrowserRouter as Router, Route, Routes,Link } from 'react-router-dom'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n  <Router>\r\n    <div className=\"App\"> \r\n \r\n    <Routes>\r\n          \r\n          <Route exact path=\"/\" element={<Home/>}/>\r\n          {/* <Route exact path=\"/\" element={<Header/>}/> */}\r\n          <Route exact path=\"/Login\" element={<Login/>}/>\r\n          <Route exact path=\"/signup\" element={<SignUp/>}/>\r\n          <Route exact path =\"/buyer\" element={<Buyer/>}/>\r\n          <Route exact path =\"/purchaseItem\" element={<PurchaseItem/>}/>\r\n    </Routes>\r\n     \r\n     \r\n    </div>\r\n    </Router>\r\n   \r\n  );\r\n}\r\n\r\nexport default App;\r\n","G:\\Projects\\BuyS_Monefy\\client_fe\\src\\components\\signup_page\\SignUp.js",[],"G:\\Projects\\BuyS_Monefy\\client_fe\\src\\components\\home\\Home.js",[],"G:\\Projects\\BuyS_Monefy\\client_fe\\src\\components\\header\\Header.js",[],"G:\\Projects\\BuyS_Monefy\\client_fe\\src\\components\\login\\Login.js",["46","47"],"import './Login.css';\r\nimport React , {useState,useEffect} from \"react\";\r\nimport {options, sessionConst} from '../../Constants'\r\nimport axios from 'axios';\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\n\r\nfunction Login() {\r\n\r\n  let navigate = useNavigate();\r\n  const [login, setLogin] = useState({\r\n    userName : \"\",\r\n    password : \"\",\r\n    userType : \"\"\r\n  });\r\n  \r\n  let name, value;\r\n  const handleInput = (e) => {\r\n    \r\n    console.log(e);\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n\r\n    setLogin({...login, [name] : value});\r\n  }\r\n  const loginValidate = async (e) =>{\r\n    // console.log(login.userName);\r\n    e.preventDefault();\r\n    let response = await axios.get(\"http://localhost:3001/api/loginValidate\", \r\n    { params : {\r\n      userName : login.userName , \r\n      password : login.password,\r\n      userType : login.userType,\r\n    }})\r\n\r\n    // let data = await response.json();\r\n    // console.log(data);\r\n    .then ((response) => {\r\n    \r\n    window.sessionStorage.setItem(sessionConst.userName , login.userName);\r\n\r\n    if(login.userType === \"2\"){\r\n      navigate(\"/Buyer\")\r\n    }\r\n    })};\r\n    // if(data.status === 200){\r\n    //   alert(\"response\");\r\n    // }\r\n    // }).catch(err => console.log(err));\r\n    // navigate(\"https://www.google.com\");\r\n    \r\n  \r\n  return (\r\n    <div className=\"login\">\r\n        <h1>Login</h1>\r\n        <form method=\"get\">\r\n            <div className=\"txt_field\">\r\n                <input type = \"text\" name  = \"userName\" value={login.userName} required onChange = {handleInput}></input>\r\n                <label>Username</label>\r\n            </div>\r\n            \r\n            <div className=\"txt_field\">\r\n                <input type = \"password\" name = \"password\" value={login.password} required onChange = {handleInput}></input>\r\n                <label>Password</label>\r\n            </div>\r\n            \r\n            <div className=\"pass\">Forgot Password?</div>\r\n            <label>Select User Type :  </label>\r\n            <select className=\"txt_field\" id = \"ddlUserType\" value={login.userType} name = \"userType\" onChange = {handleInput}>\r\n                \r\n                <option value=\"0\">Please select</option>\r\n                {\r\n                    options.map((option, index)=> (<option key={index} value = {option.typeId}>{option.userType}</option>))\r\n                }\r\n            </select>\r\n            <input type = \"submit\" value = \"Login\" onClick = {(e) => loginValidate(e)}></input>\r\n            \r\n            <div className=\"signup_link\">Not a member? <a href=\"SignUp\">SignUp</a></div>\r\n        </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","G:\\Projects\\BuyS_Monefy\\client_fe\\src\\Constants.js",[],"G:\\Projects\\BuyS_Monefy\\client_fe\\src\\components\\buyer\\Buyer.js",["48","49","50"],"G:\\Projects\\BuyS_Monefy\\client_fe\\src\\components\\purchaseItem\\PurchaseItem.js",["51","52"],"import React, {useState,useEffect} from 'react';\r\nimport './PurchaseItem.css';\r\nimport axios, { Axios } from 'axios';\r\nimport { sessionConst, modeOfPayment } from '../../Constants';\r\n\r\nlet userName = window.sessionStorage.getItem(sessionConst.userName);\r\nlet totalPrice = 0;\r\nlet supplierMap = new Map();\r\nlet selectedItemId = 0;\r\nlet itemMap = new Map();\r\nlet itemPriceMap = new Map();\r\nlet availableItemsMap = new Map();\r\nlet arr = [];\r\n\r\nfunction PurchaseItem() {\r\n  const [user, setUser] = useState({\r\n    bname : `${userName}`,\r\n    itemId : 0,\r\n    sname : \"\",\r\n    noOfItems : \"\",\r\n    totalPrice : `${totalPrice}`,\r\n    modeOfPayment : \"\",\r\n  });\r\n\r\n  const [items, setItems] = useState([])\r\n  const [supplierItemTransactionDetails , setSupplierItemTransactionDetails] = useState([]);\r\n  const [array,setArray] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:3001/api/getItems\").then((response) => {\r\n      setItems(response.data);\r\n    });\r\n    axios.get(\"http://localhost:3001/api/getSupplierItems\").then((response) => {\r\n      setSupplierItemTransactionDetails(response.data);\r\n    });\r\n\r\n    \r\n\r\n  }, []);\r\n  let name, value;\r\n  const handleInput = (e) => {\r\n    \r\n    name = e.target.name;\r\n    value = e.target.value;\r\n    console.log(name , \" \", value);\r\n    setUser({...user, [name] : value});\r\n    \r\n\r\n  }\r\n  const HandleItemChange = (e) => {\r\n      handleInput(e);\r\n      selectedItemId = e.target.value;\r\n\r\n\r\n      // item name : item id  => supplier details\r\n      // itemmap : key : item id value map : (<supplier : available item>)\r\n\r\n      supplierItemTransactionDetails.map((val) => { \r\n      \r\n      let snameMap = new Map(); // key - supplierName , value - item price\r\n      if(!itemMap.has(val.itemId)){\r\n        itemMap.set(val.itemId , snameMap);\r\n      }\r\n\r\n      snameMap = itemMap.get(val.itemId);\r\n      snameMap.set(val.sname , val.availableItems);\r\n      itemMap.set(val.itemId,snameMap);\r\n\r\n\r\n      var str = val.itemId+\":\"+val.sname;\r\n      \r\n      itemPriceMap.set(str,val.itemPrice);\r\n      \r\n      availableItemsMap.set(str,val.availableItems);\r\n\r\n    })\r\n\r\n    supplierMap = itemMap.get(parseInt(selectedItemId));\r\n\r\n    arr = Array.from(supplierMap, ([name, value]) => ({ name, value }));\r\n    setArray(arr);\r\n    console.log(\"arrays is : \",arr);\r\n    }\r\n\r\n  const handlePriceChange = (e) => {\r\n    handleInput(e);\r\n    var str = selectedItemId+\":\"+user.sname;\r\n\r\n    console.log(value);\r\n    console.log(parseInt(availableItemsMap.get(str)));\r\n    \r\n    if(value > parseInt(availableItemsMap.get(str))){\r\n      alert(\"Stock unavailable\");\r\n    }\r\n\r\n    totalPrice = value*itemPriceMap.get(str);\r\n    console.log(totalPrice);\r\n    user.totalPrice = `${totalPrice}`;\r\n  }\r\n\r\n  const submitDetails = async(e) => {\r\n    // setUser({...user,[user.totalPrice] : `${totalPrice}`});\r\n    e.preventDefault();\r\n    axios.post(\"http://localhost:3001/api/submitBuyerPurchase\", \r\n    {\r\n      bname : user.bname,\r\n      itemId : user.itemId,\r\n      sname : user.sname,\r\n      noOfItems : user.noOfItems,\r\n      totalPrice : `${totalPrice}`,\r\n      modeOfPayment : user.modeOfPayment\r\n    },).then(() => {\r\n      console.log(\"post body\");\r\n    }).catch((err) => { console.log('Axios Error:', err); })\r\n  };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n          <form className=\"row justify-content-center\" method=\"post\">\r\n            <div className=\"col-12 col-md-8 col-lg-6 col-xl-5\">\r\n              <div className=\"row mt-2\">\r\n                <div className=\"col text-center\">\r\n                  <h1 className=\"heading\">Purchase Item</h1>\r\n                  <p className=\"text-h3\">Please fill in this form to purchase any item</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"row align-items-center inputBox\">\r\n                <div className=\"col mt-2 form-floating\">\r\n                  <input type=\"text\" disabled = 'true'  className=\"form-control\" id=\"b-name\" name=\"bname\" value={userName} onChange={handleInput} placeholder=\"Enter your first name\" required />\r\n                  <label className=\"mx-3\" htmlFor=\"bname\">Buyer Name</label>\r\n                </div>\r\n              </div>\r\n              <div className=\"row justify-content-center mt-4 inputBox\">\r\n                <select className=\"mt-2 form-select\" id=\"ddlUserType\" name=\"itemId\" value={user.itemId} onChange={HandleItemChange} required >\r\n                  <option value=\"0\">Select Item</option>\r\n                    {items && items.map((val) => (\r\n                    <option value={val.itemId}>{val.itemName}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              \r\n              <div className=\"row justify-content-center mt-4 inputBox\">\r\n                <select className=\"mt-2 form-select\" id=\"ddlUserType\" name=\"sname\" value={user.sname} onChange={handleInput} required >\r\n                  <option value=\"0\">Select Supplier Name</option>\r\n                    {/* {supplierMap && supplierMap.forEach((key,value) => {\r\n                      <option value={key}>{value}</option> \r\n                      console.log(supplierMap);\r\n                    })} */}\r\n                    {\r\n                        array?.map((input) => (\r\n                          <option value={input.name}>{input.name} (Available Items : {input.value})</option>\r\n                        \r\n                        ))\r\n                    }\r\n                </select>\r\n              </div>\r\n              \r\n              <div className=\"row align-items-center inputBox mt-4\">\r\n                <div className=\"col form-floating mt-1\">\r\n                  <input type=\"text\" className=\"form-control\" id=\"noOf-items\" name=\"noOfItems\" value={user.noOfItems} onChange={handlePriceChange} placeholder=\"Enter your last name\" required/>\r\n                  <label className=\"mx-3\" htmlFor=\"noOfItems\">Number of Purchase Items</label>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"row align-items-center inputBox mt-4\">\r\n                <div className=\"col mt-1 form-floating\">\r\n                  <input type=\"text\" disabled = 'true' className=\"form-control\" id=\"total-price\" name=\"totalPrice\" value={totalPrice} onChange={handleInput} required />\r\n                  <label className=\"mx-3\" htmlFor=\"totalPrice\">Total Price</label>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"row justify-content-center mt-4 inputBox\">\r\n                <select className=\"mt-2 form-select\" id=\"ddlUserType\" name=\"modeOfPayment\" value={user.modeOfPayment} onChange={handleInput} required >\r\n                  <option value=\"0\">Select mode of payment</option>\r\n                    {modeOfPayment.map((option, index) => (\r\n                    <option key={index} value={option.mode}>{option.mode}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"row justify-content-start mt-3\">\r\n                <div className=\"col\">\r\n                  <div className=\"form-check\">\r\n                    <label className=\"form-check-label\">\r\n                      <input type=\"checkbox\" className=\"form-check-input\" required />\r\n                      I Read and Accept <a href=\"/\">Terms and Conditions</a>\r\n                    </label>\r\n                  </div>\r\n                  <button className=\"btn btn-primary mt-3\" onClick = {(e) => submitDetails(e)}>Purchase Item</button>\r\n                </div>\r\n              </div>\r\n              \r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n\r\n}\r\n\r\nexport default PurchaseItem;",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":7,"column":8,"nodeType":"59","messageId":"60","endLine":7,"endColumn":14},{"ruleId":"57","severity":1,"message":"61","line":9,"column":49,"nodeType":"59","messageId":"60","endLine":9,"endColumn":53},{"ruleId":"57","severity":1,"message":"62","line":2,"column":26,"nodeType":"59","messageId":"60","endLine":2,"endColumn":35},{"ruleId":"57","severity":1,"message":"63","line":29,"column":9,"nodeType":"59","messageId":"60","endLine":29,"endColumn":17},{"ruleId":"57","severity":1,"message":"64","line":3,"column":17,"nodeType":"59","messageId":"60","endLine":3,"endColumn":22},{"ruleId":"65","severity":1,"message":"66","line":21,"column":29,"nodeType":"67","endLine":21,"endColumn":58},{"ruleId":"65","severity":1,"message":"66","line":24,"column":29,"nodeType":"67","endLine":24,"endColumn":58},{"ruleId":"57","severity":1,"message":"64","line":3,"column":17,"nodeType":"59","messageId":"60","endLine":3,"endColumn":22},{"ruleId":"68","severity":1,"message":"69","line":58,"column":48,"nodeType":"70","messageId":"71","endLine":58,"endColumn":50},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useEffect' is defined but never used.","'response' is assigned a value but never used.","'Axios' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]